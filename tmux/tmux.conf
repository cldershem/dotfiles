# tmux powerline
# source ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf

set-option -g default-shell /bin/zsh

# neovim https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set -g escape-time 10

###################
# maximum-awesome #
###################
# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
# set -g base-index 1

# vi is good
setw -g mode-keys vi

# mouse behavior
# setw -g mode-mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
set-option -g mouse on

set-option -g default-terminal screen-256color

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# # smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
# bind C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# set-window-option display-panes-time 1500

# Status Bar
set-option -g status-interval 1
set-option -g status-left ''
set-option -g status-right '%l:%M%p'
set-window-option -g window-status-current-fg magenta
set-option -g status-fg default

# Status Bar solarized-dark (default)
set-option -g status-bg black
# set-option -g pane-active-border-fg black
# set-option -g pane-border-fg black
# set-option -g pane-active-border-fg yellow
# set-option -g pane-border-fg yellow

# Status Bar solarized-light
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g status-bg white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-active-border-fg white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-border-fg white"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

##################
# usevim.com guy #
##################
# sets status bar to not crap
# set -g status on
# set -g status-utf8 on
# set -g status-interval 2
# set -g status-fg colour200 #black
# set -g status-bg colour233
# set -g status-right '#[bg=colour233] #[fg=white,bg=colour234] %T #[fg=yellow,bg=colour233] #[bg=colour232]'
# set -g status-left '#[fg=colour16,bg=colour232,bold] #S #[fg=colour254,bg=colour234,nobold]'
# set -g window-status-format "#[fg=colour16,bg=colour234] #I #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"
# set -g window-status-current-format "#[fg=colour117,bg=colour31] #I #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"
# set -g window-status-separator ""

# sets to top
# set-option -g status-position top

# ###############
# # Rob McBroom #
# ###############
# ## appearance
# set -g status-justify left
# set -g status-left-length 26
# # set -g status-right-length 150
# set -g status-style fg=white,bg=colour234
# set -g mode-style fg=colour111,bg=colour238
# set -g display-panes-active-colour colour214
# # set -g display-panes-colour blue
# 
# set -g pane-border-style fg=colour238,bg=colour238
# set -g pane-active-border-style fg=colour251,bg=colour238
# set -g message-style fg=colour236,bg=colour230,bold
# 
# # set -g status-left '#[fg=colour235,bg=colour248,bold] #S #[fg=colour245,bg=colour238,bold] #P '
# set -g status-left '#[fg=colour239,bg=colour248,bold]‹#S›'
# 
# set -g window-status-format "#[fg=colour254,bg=colour240,bold] #I#[fg=colour251,none]#F#[fg=colour254] #W "
# set -g window-status-current-format "#[fg=colour254,bg=colour61,bold] #I#[fg=colour251,none]#F#[fg=colour254] #W "
# 
# # right-aligned info
# set -g status-right '#[bg=colour238,none] #{?pane_synchronized,#[fg=colour254]⌨  ,}#{?pane_in_mode,#[fg=colour254]⇵  ,}#[fg=colour245]#{pane_width}x#{pane_height} #[fg=colour239,bg=colour248,bold] #h (#(uname -s)) '
# 
# set -g window-status-activity-style bold
# # set -g window-status-activity-style ???
